# HG changeset patch
# User Andrew Cooper <andrew.cooper3@citrix.com>
# Date 1401716854 -3600
# Node ID cd2fb89f6044d87b6b9b9bab9d0facea372b2488
# Parent  c146add939655b9a77a9dbe38abf194bca8d6d16
tools/xenstore: Fix memory leaks in the client

Free the expanding buffer and output buffer after use.  Close the xenstore
handle after use.

The command line client is now valgrind-clean.

Signed-off-by: Andrew Cooper <andrew.cooper3@citrix.com>
CC: Ian Campbell <Ian.Campbell@citrix.com>
CC: Ian Jackson <Ian.Jackson@eu.citrix.com>
Acked-by: Ian Campbell <ian.campbell@citrix.com>

diff -r c146add93965 -r cd2fb89f6044 tools/xenstore/xenstore_client.c
--- a/tools/xenstore/xenstore_client.c
+++ b/tools/xenstore/xenstore_client.c
@@ -40,6 +40,7 @@ enum mode {
 
 static char *output_buf = NULL;
 static int output_pos = 0;
+static struct expanding_buffer ebuf;
 
 static int output_size = 0;
 
@@ -126,7 +127,6 @@ static int show_whole_path = 0;
 
 static void do_ls(struct xs_handle *h, char *path, int cur_depth, int show_perms)
 {
-    static struct expanding_buffer ebuf;
     char **e;
     char newpath[STRING_MAX], *val;
     int newpath_len;
@@ -308,7 +308,6 @@ perform(enum mode mode, int optind, int 
             /* CANNOT BE REACHED */
             errx(1, "invalid mode %d", mode);
         case MODE_read: {
-            static struct expanding_buffer ebuf;
             unsigned len;
             char *val = xs_read(xsh, xth, argv[optind], &len);
             if (val == NULL) {
@@ -323,7 +322,6 @@ perform(enum mode mode, int optind, int 
             break;
         }
         case MODE_write: {
-            static struct expanding_buffer ebuf;
             char *val_spec = argv[optind + 1];
             unsigned len;
             expanding_buffer_ensure(&ebuf, strlen(val_spec)+1);
@@ -655,5 +653,11 @@ again:
     if (output_pos)
 	printf("%s", output_buf);
 
+    free(output_buf);
+    free(ebuf.buf);
+
+    if (xsh)
+        xs_close(xsh);
+
     return ret;
 }
