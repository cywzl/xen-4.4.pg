Implement workaround for Intel 7400 processor series MWAIT errata

Intel 7400 processor series suffer from errata AA165 which causes excessive
false MWAIT wakeups

http://www.intel.com/Assets/en_US/PDF/specupdate/320336.pdf

Implement the workaround for the Xen ACPI MWAIT path.

diff -r 96d15920ce2c xen/arch/x86/acpi/cpu_idle.c
--- a/xen/arch/x86/acpi/cpu_idle.c
+++ b/xen/arch/x86/acpi/cpu_idle.c
@@ -270,6 +270,13 @@ static void mwait_idle_with_hints(unsign
     unsigned int cpu = smp_processor_id();
     s_time_t expires = per_cpu(timer_deadline, cpu);
 
+    /*
+    * 1. The CLFLUSH is a workaround for erratum AAI65 for
+    * the Xeon 7400 series.  
+    */
+    if ( cpu_has_clflush_monitor )
+        clflush(&mwait_wakeup(cpu));
+
     __monitor((void *)&mwait_wakeup(cpu), 0, 0);
     smp_mb();
 
@@ -622,7 +629,8 @@ static void acpi_dead_idle(void)
              * load/store visible before flush cache line.
              */
             mb();
-            clflush(mwait_ptr);
+            if ( cpu_has_clflush_monitor )
+                clflush(mwait_ptr);
             __monitor(mwait_ptr, 0, 0);
             mb();
             __mwait(cx->address, 0);
diff -r 96d15920ce2c xen/arch/x86/cpu/intel.c
--- a/xen/arch/x86/cpu/intel.c
+++ b/xen/arch/x86/cpu/intel.c
@@ -168,6 +168,8 @@ static void __devinit Intel_errata_worka
 			wrmsr (MSR_IA32_MISC_ENABLE, lo, hi);
 		}
 	}
+    if (c->x86 == 6 && c->x86_model == 29 && cpu_has_clflush)
+        set_bit(X86_FEATURE_CLFLUSH_MONITOR, c->x86_capability);
 }
 
 
diff -r 96d15920ce2c xen/include/asm-x86/cpufeature.h
--- a/xen/include/asm-x86/cpufeature.h
+++ b/xen/include/asm-x86/cpufeature.h
@@ -80,6 +80,7 @@
 #define X86_FEATURE_TSC_RELIABLE (3*32+12) /* TSC is known to be reliable */
 #define X86_FEATURE_XTOPOLOGY    (3*32+13) /* cpu topology enum extensions */
 #define X86_FEATURE_CPUID_FAULTING (3*32+14) /* cpuid faulting */
+#define X86_FEATURE_CLFLUSH_MONITOR (3*32+15) /* clflush reqd with monitor*/
 
 /* Intel-defined CPU features, CPUID level 0x00000001 (ecx), word 4 */
 #define X86_FEATURE_XMM3	(4*32+ 0) /* Streaming SIMD Extensions-3 */
@@ -241,6 +242,8 @@
 #define cpu_has_vmx		boot_cpu_has(X86_FEATURE_VMXE)
 
 #define cpu_has_cpuid_faulting	boot_cpu_has(X86_FEATURE_CPUID_FAULTING)
+#define cpu_has_clflush_monitor	boot_cpu_has(X86_FEATURE_CLFLUSH_MONITOR)
+
 
 #endif /* __ASM_I386_CPUFEATURE_H */
 
