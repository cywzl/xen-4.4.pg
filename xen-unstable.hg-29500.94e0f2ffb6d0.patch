# HG changeset patch
# User Jan Beulich <jbeulich@suse.com>
# Date 1409068612 -7200
# Node ID 94e0f2ffb6d058ed8bf9408aecd443d67c438b19
# Parent  bbf2793dd0838844b71f047780521bb929e31454
x86/IO-APIC: don't process softirqs during early boot

Commit e13b320399 ("x86/irq: process softirqs in irq keyhandlers")
made this unconditional, but the boot time use of __print_IO_APIC()
(when "apic_verbosity=debug" was given) can't tolerate that.

Reported-by: Sander Eikelenboom <linux@eikelenboom.it>
Signed-off-by: Jan Beulich <jbeulich@suse.com>
Reviewed-by: Andrew Cooper <andrew.cooper3@citrix.com>
Tested-by:  Sander Eikelenboom <linux@eikelenboom.it>

diff -r bbf2793dd083 -r 94e0f2ffb6d0 xen/arch/x86/io_apic.c
--- a/xen/arch/x86/io_apic.c
+++ b/xen/arch/x86/io_apic.c
@@ -1092,7 +1092,7 @@ static inline void UNEXPECTED_IO_APIC(vo
 {
 }
 
-static void /*__init*/ __print_IO_APIC(void)
+static void /*__init*/ __print_IO_APIC(bool_t boot)
 {
     int apic, i;
     union IO_APIC_reg_00 reg_00;
@@ -1113,7 +1113,8 @@ static void /*__init*/ __print_IO_APIC(v
     printk(KERN_INFO "testing the IO APIC.......................\n");
 
     for (apic = 0; apic < nr_ioapics; apic++) {
-        process_pending_softirqs();
+        if ( !boot )
+            process_pending_softirqs();
 
         if (!nr_ioapic_entries[apic])
             continue;
@@ -1219,7 +1220,7 @@ static void /*__init*/ __print_IO_APIC(v
     for (i = 0; i < nr_irqs_gsi; i++) {
         struct irq_pin_list *entry = irq_2_pin + i;
 
-        if ( !(i & 0x1f) )
+        if ( !boot && !(i & 0x1f) )
             process_pending_softirqs();
 
         if (entry->pin < 0)
@@ -1242,12 +1243,12 @@ static void /*__init*/ __print_IO_APIC(v
 static void __init print_IO_APIC(void)
 {
     if (apic_verbosity != APIC_QUIET)
-        __print_IO_APIC();
+        __print_IO_APIC(1);
 }
 
 static void _print_IO_APIC_keyhandler(unsigned char key)
 {
-    __print_IO_APIC();
+    __print_IO_APIC(0);
 }
 static struct keyhandler print_IO_APIC_keyhandler = {
     .diagnostic = 1,
