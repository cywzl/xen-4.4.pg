# HG changeset patch
# User David Vrabel <david.vrabel@citrix.com>
# Date 1385374505 -3600
# Node ID 8363f3fba9a147f9e9b68c7c28de3ebcfa42eb39
# Parent  a9e4d6fb3dd34ef8699c6cbd6c57cfb9d8923b4a
evtchn/fifo: only set READY for new heads

Setting a queue's READY bit for every event added to the queue
introduces a race.

If an event is added to the tail of a queue, the guest may consume the
newly added event and leave an empty queue before the READY is set.
The guest may then see a stale HEAD value and if the event at the
stale head became linked onto a different queue, the guest would
consume events from the wrong queue (corrupting it).

As noted in section 4.1.2 of the design document, only set READY if a
new HEAD is set.  This ensures that if the guest sees a READY bit set
the corresponding HEAD is valid.

Signed-off-by: David Vrabel <david.vrabel@citrix.com>

diff -r a9e4d6fb3dd3 -r 8363f3fba9a1 xen/common/event_fifo.c
--- a/xen/common/event_fifo.c	Fri Nov 22 16:35:11 2013 +0000
+++ b/xen/common/event_fifo.c	Mon Nov 25 11:15:05 2013 +0100
@@ -161,8 +161,9 @@ static void evtchn_fifo_set_pending(stru
 
         spin_unlock_irqrestore(&q->lock, flags);
 
-        if ( !test_and_set_bit(q->priority,
-                               &v->evtchn_fifo->control_block->ready) )
+        if ( !linked
+             && !test_and_set_bit(q->priority,
+                                  &v->evtchn_fifo->control_block->ready) )
             vcpu_mark_events_pending(v);
     }
 
