# HG changeset patch
# Parent f4b752565e19de3234ec25ad44639af05f0161a2

diff -r f4b752565e19 xen/arch/x86/crash.c
--- a/xen/arch/x86/crash.c
+++ b/xen/arch/x86/crash.c
@@ -31,6 +31,8 @@
 #include <xen/iommu.h>
 #include <asm/hpet.h>
 
+void (*late_debug)(void) = NULL;
+
 static cpumask_t waiting_to_crash;
 static unsigned int crashing_cpu;
 static DEFINE_PER_CPU_READ_MOSTLY(bool_t, crash_save_done);
@@ -113,6 +115,7 @@ void __attribute__((noreturn)) do_nmi_cr
         halt();
 }
 
+unsigned int saved_local_irq_count;
 static void nmi_shootdown_cpus(void)
 {
     unsigned long msecs;
@@ -121,6 +124,7 @@ static void nmi_shootdown_cpus(void)
     local_irq_disable();
 
     crashing_cpu = cpu;
+    saved_local_irq_count = local_irq_count(crashing_cpu);
     local_irq_count(crashing_cpu) = 0;
 
     cpumask_andnot(&waiting_to_crash, &cpu_online_map, cpumask_of(cpu));
@@ -179,6 +183,9 @@ static void nmi_shootdown_cpus(void)
         printk("Failed to shoot down CPUs {%s}\n", keyhandler_scratch);
     }
 
+    if ( late_debug )
+        late_debug();
+
     /* Crash shutdown any IOMMU functionality as the crashdump kernel is not
      * happy when booting if interrupt/dma remapping is still enabled */
     iommu_crash_shutdown();
diff -r f4b752565e19 xen/arch/x86/hpet.c
--- a/xen/arch/x86/hpet.c
+++ b/xen/arch/x86/hpet.c
@@ -18,6 +18,7 @@
 #include <asm/msi.h>
 #include <mach_apic.h>
 #include <xen/cpuidle.h>
+#include <xen/keyhandler.h>
 
 #define MAX_DELTA_NS MILLISECS(10*1000)
 #define MIN_DELTA_NS MICROSECS(20)
@@ -48,6 +49,29 @@ static struct hpet_event_channel *__read
 /* msi hpet channels used for broadcast */
 static unsigned int __read_mostly num_hpets_used;
 
+extern void __dump_msi(int, bool_t);
+void ca_113568_hpet(void)
+{
+    unsigned i;
+    struct hpet_event_channel *c;
+
+    printk("num_hpets_used = %u\n", num_hpets_used);
+
+    for ( i = 0; i < num_hpets_used; ++i )
+    {
+        c = &hpet_events[i];
+
+        cpumask_scnprintf(keyhandler_scratch, sizeof(keyhandler_scratch),
+                          c->cpumask);
+
+        printk("  HPET[%02u] ", i);
+        printk("idx %u, cpu %u, flags 0x%08x, cpumask %s",
+               c->idx, c->cpu, c->flags, keyhandler_scratch);
+        __dump_msi(c->msi.irq, 0);
+        printk("\n");
+    }
+}
+
 DEFINE_PER_CPU(struct hpet_event_channel *, cpu_bc_channel);
 
 unsigned long __read_mostly hpet_address;
diff -r f4b752565e19 xen/arch/x86/msi.c
--- a/xen/arch/x86/msi.c
+++ b/xen/arch/x86/msi.c
@@ -1206,7 +1206,7 @@ void __init early_msi_init(void)
  * only be false for custom debugging when the lock state might not be
  * consistent (e.g. on crash).
  */
-static void __dump_msi(int irq, bool_t use_locks)
+void __dump_msi(int irq, bool_t use_locks)
 {
     struct irq_desc *desc = irq_to_desc(irq);
     const struct msi_desc *entry;
diff -r f4b752565e19 xen/arch/x86/x86_64/traps.c
--- a/xen/arch/x86/x86_64/traps.c
+++ b/xen/arch/x86/x86_64/traps.c
@@ -220,6 +220,16 @@ void show_page_walk(unsigned long addr)
            l1_table_offset(addr), l1e_get_intpte(l1e), pfn);
 }
 
+extern void (*late_debug)(void);
+extern void ca_113568_hpet(void);
+extern unsigned int saved_local_irq_count;
+void ca_113568_dump_state(void)
+{
+    printk("CA-113568 - Dumping interesting state:\n");
+    printk("  local_irq_count was %u\n", saved_local_irq_count);
+    ca_113568_hpet();
+}
+
 void double_fault(void);
 void do_double_fault(struct cpu_user_regs *regs)
 {
@@ -247,6 +257,9 @@ void do_double_fault(struct cpu_user_reg
     _show_registers(regs, crs, CTXT_hypervisor, NULL);
     show_stack_overflow(cpu, regs->rsp);
 
+    late_debug = ca_113568_dump_state;
+    wmb();
+
     panic("DOUBLE FAULT -- system shutdown\n");
 }
 
