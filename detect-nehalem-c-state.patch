# HG changeset patch
# Parent ec529a1d9fd0d0bf03db9be21c23b2700ad51fbb
CA-49885: Restrict Intel Nehalem and Westmere class processors to a maximum
c-state level of 1 to workaround various Intel errata assoicated with these
processors.

diff -r ec529a1d9fd0 xen/arch/x86/cpu/intel.c
--- a/xen/arch/x86/cpu/intel.c
+++ b/xen/arch/x86/cpu/intel.c
@@ -146,6 +146,38 @@ void __devinit early_intel_workaround(st
 }
 
 /*
+ * Detect Intel Nehalem CPU's with C-states enabled and restrict to C1 due to
+ * Intel Errata BA80, AAK120, AAM108, AAO67, BD59, AAY54
+ */
+static void __devinit nehalem_cpu_cstate_workaround(struct cpuinfo_x86 *c)
+{
+    static bool_t nehalem_cstate_errata_workaround_warning = 0;
+
+    if ( c->x86_vendor == X86_VENDOR_INTEL && c->x86 == 6 )
+    {
+        switch ( c->x86_model )
+        {
+        /* Nehalem */
+        case 0x1A:
+        case 0x1E:
+        case 0x1F:
+        case 0x2E:
+        /* Westmere */
+        case 0x25:
+        case 0x2C:
+            if ( !nehalem_cstate_errata_workaround_warning )
+            {
+                printk(XENLOG_WARNING "Disabling C-states C3 and C6 on Nehalem"
+                        " Processors due to errata\n");
+                nehalem_cstate_errata_workaround_warning = 1;
+            }
+            max_cstate = 1;
+            break;
+        }
+    }
+}
+
+/*
  * P4 Xeon errata 037 workaround.
  * Hardware prefetcher may cause stale data to be loaded into the cache.
  *
@@ -169,9 +201,10 @@ static void __devinit Intel_errata_worka
 	if (c->x86 == 6 && cpu_has_clflush &&
 	    (c->x86_model == 29 || c->x86_model == 46 || c->x86_model == 47))
 		set_bit(X86_FEATURE_CLFLUSH_MONITOR, c->x86_capability);
+
+	nehalem_cpu_cstate_workaround(c);
 }
 
-
 /*
  * find out the number of processor cores on the die
  */
@@ -190,6 +223,7 @@ static int __devinit num_cpu_cores(struc
 		return 1;
 }
 
+
 static void __devinit init_intel(struct cpuinfo_x86 *c)
 {
 	unsigned int l2 = 0;
