# HG changeset patch
# User David Vrabel <david.vrabel@citrix.com>
# Date 1381739139 -7200
# Node ID 522b00942ed31f8194d3c551b01bea824d5bda83
# Parent f6942ab1e33df1a8d45ad98ec3532c22c7c87072
libxl,xl: add max_event_channels option to xl configuration file

Add the 'max_event_channels' option to the xl configuration file to
limit the number of event channels that domain may use.

Plumb this option through to libxl via a new libxl_build_info field
and call xc_domain_set_max_evtchn() in the post build stage of domain
creation.

A new LIBXL_HAVE_BUILDINFO_EVENT_CHANNELS #define indicates that this
new field is available.

The default value of 1023 limits the domain to using the minimum
amount of global mapping pages and at most 5 xenheap pages.

Signed-off-by: David Vrabel <david.vrabel@citrix.com>
Acked-by: Ian Campbell <ian.campbell@citrix.com>
Acked-by: Keir Fraser <keir@xen.org>

diff -r f6942ab1e33d docs/man/xl.cfg.pod.5
--- a/docs/man/xl.cfg.pod.5	Mon Oct 14 10:24:03 2013 +0200
+++ b/docs/man/xl.cfg.pod.5	Tue Dec 10 15:05:10 2013 +0000
@@ -572,6 +572,17 @@ Allow a guest to access specific physica
 It is recommended to use this option only for trusted VMs under
 administrator control.
 
+=item B<max_event_channels=N>
+
+Limit the guest to using at most N event channels (PV interrupts).
+Guests use hypervisor resources for each event channel they use.
+
+The default of 1023 should be sufficient for typical guests.  The
+maximum value depends what the guest supports.  Guests supporting the
+FIFO-based event channel ABI support up to 131,071 event channels.
+Other guests are limited to 4095 (64-bit x86 and ARM) or 1023 (32-bit
+x86).
+
 =back
 
 =head2 Paravirtualised (PV) Guest Specific Options
diff -r f6942ab1e33d tools/libxl/libxl.h
--- a/tools/libxl/libxl.h	Mon Oct 14 10:24:03 2013 +0200
+++ b/tools/libxl/libxl.h	Tue Dec 10 15:05:10 2013 +0000
@@ -82,6 +82,11 @@
 #define LIBXL_HAVE_DOMAIN_NODEAFFINITY 1
 
 /*
+ * The libxl_domain_build_info has the event_channels field.
+ */
+#define LIBXL_HAVE_BUILDINFO_EVENT_CHANNELS 1
+
+/*
  * libxl ABI compatibility
  *
  * The only guarantee which libxl makes regarding ABI compatibility
diff -r f6942ab1e33d tools/libxl/libxl_create.c
--- a/tools/libxl/libxl_create.c	Mon Oct 14 10:24:03 2013 +0200
+++ b/tools/libxl/libxl_create.c	Tue Dec 10 15:05:10 2013 +0000
@@ -208,6 +208,9 @@ int libxl__domain_build_info_setdefault(
 
     libxl_defbool_setdefault(&b_info->disable_migrate, false);
 
+    if (!b_info->event_channels)
+        b_info->event_channels = 1023;
+
     switch (b_info->type) {
     case LIBXL_DOMAIN_TYPE_HVM:
         if (b_info->shadow_memkb == LIBXL_MEMKB_DEFAULT)
diff -r f6942ab1e33d tools/libxl/libxl_dom.c
--- a/tools/libxl/libxl_dom.c	Mon Oct 14 10:24:03 2013 +0200
+++ b/tools/libxl/libxl_dom.c	Tue Dec 10 15:05:10 2013 +0000
@@ -268,6 +268,13 @@ int libxl__build_post(libxl__gc *gc, uin
     if (rc)
         return rc;
 
+    rc = xc_domain_set_max_evtchn(ctx->xch, domid, info->event_channels);
+    if (rc) {
+        LOG(ERROR, "Failed to set event channel limit to %d (%d)",
+            info->event_channels, rc);
+        return ERROR_FAIL;
+    }
+
     libxl_cpuid_apply_policy(ctx, domid);
     if (info->cpuid != NULL)
         libxl_cpuid_set(ctx, domid, info->cpuid);
diff -r f6942ab1e33d tools/libxl/libxl_types.idl
--- a/tools/libxl/libxl_types.idl	Mon Oct 14 10:24:03 2013 +0200
+++ b/tools/libxl/libxl_types.idl	Tue Dec 10 15:05:10 2013 +0000
@@ -295,6 +295,7 @@ libxl_domain_build_info = Struct("domain
     ("irqs",             Array(uint32, "num_irqs")),
     ("iomem",            Array(libxl_iomem_range, "num_iomem")),
     ("claim_mode",	     libxl_defbool),
+    ("event_channels",   uint32),
     ("u", KeyedUnion(None, libxl_domain_type, "type",
                 [("hvm", Struct(None, [("firmware",         string),
                                        ("bios",             libxl_bios_type),
diff -r f6942ab1e33d tools/libxl/xl_cmdimpl.c
--- a/tools/libxl/xl_cmdimpl.c	Mon Oct 14 10:24:03 2013 +0200
+++ b/tools/libxl/xl_cmdimpl.c	Tue Dec 10 15:05:10 2013 +0000
@@ -813,6 +813,9 @@ static void parse_config_data(const char
     if (!xlu_cfg_get_long (config, "videoram", &l, 0))
         b_info->video_memkb = l * 1024;
 
+    if (!xlu_cfg_get_long(config, "max_event_channels", &l, 0))
+        b_info->event_channels = l;
+
     switch(b_info->type) {
     case LIBXL_DOMAIN_TYPE_HVM:
         if (!xlu_cfg_get_string (config, "kernel", &buf, 0))
