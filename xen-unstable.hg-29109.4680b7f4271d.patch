# HG changeset patch
# User Juergen Gross <jgross@suse.com>
# Date 1402394648 -7200
# Node ID 4680b7f4271d81cc1b52c575d3f572856731c4ee
# Parent  dfb5ac6df087b05300a29e20af6762d02a84abb0
avoid crash on HVM domain destroy with PCI passthrough

c/s bac6334b5 "move domain to cpupool0 before destroying it" introduced a
problem when destroying a HVM domain with PCI passthrough enabled. The
moving of the domain to cpupool0 includes moving the pirqs to the cpupool0
cpus, but the event channel infrastructure already is unusable for the
domain. So just avoid moving pirqs for dying domains.

Signed-off-by: Juergen Gross <jgross@suse.com>

diff -r dfb5ac6df087 -r 4680b7f4271d xen/common/schedule.c
--- a/xen/common/schedule.c
+++ b/xen/common/schedule.c
@@ -297,7 +297,8 @@ int sched_move_domain(struct domain *d, 
         spin_unlock_irq(lock);
 
         v->sched_priv = vcpu_priv[v->vcpu_id];
-        evtchn_move_pirqs(v);
+        if ( !d->is_dying )
+            evtchn_move_pirqs(v);
 
         new_p = cpumask_cycle(new_p, c->cpu_valid);
 
