# HG changeset patch
# Parent 58292d8dc16546894822def581858bc0fc8d574d
XenServer changes to Xen command line default options.

* fatal nmis even in regular builds.  dom0 is not generally capable of dealing
  with nmis it gets, causing serious errors to be obscured.

* disable APICv.  Temporary until we can debug why it causes loss of VM
  interrupts when migrating between APICv and non APICv-capable hardware.

* Console timestamps (Linux style)

* Console ring size bumped up to 64k

diff -r 58292d8dc165 xen/arch/x86/hvm/vmx/vmcs.c
--- a/xen/arch/x86/hvm/vmx/vmcs.c
+++ b/xen/arch/x86/hvm/vmx/vmcs.c
@@ -46,7 +46,7 @@ boolean_param("vpid", opt_vpid_enabled);
 static bool_t __read_mostly opt_unrestricted_guest_enabled = 1;
 boolean_param("unrestricted_guest", opt_unrestricted_guest_enabled);
 
-static bool_t __read_mostly opt_apicv_enabled = 1;
+static bool_t __read_mostly opt_apicv_enabled = 0;
 boolean_param("apicv", opt_apicv_enabled);
 
 /*
diff -r 58292d8dc165 xen/arch/x86/traps.c
--- a/xen/arch/x86/traps.c
+++ b/xen/arch/x86/traps.c
@@ -81,11 +81,7 @@
  *  dom0:   The NMI is virtualised to DOM0.
  *  ignore: The NMI error is cleared and ignored.
  */
-#ifdef NDEBUG
-static char __read_mostly opt_nmi[10] = "dom0";
-#else
 static char __read_mostly opt_nmi[10] = "fatal";
-#endif
 string_param("nmi", opt_nmi);
 
 DEFINE_PER_CPU(u64, efer);
diff -r 58292d8dc165 xen/drivers/char/console.c
--- a/xen/drivers/char/console.c
+++ b/xen/drivers/char/console.c
@@ -57,16 +57,16 @@ enum con_timestamp_mode
     TSM_BOOT           /* [SSSSSS.uuuuuu] */
 };
 
-static enum con_timestamp_mode __read_mostly opt_con_timestamp_mode = TSM_NONE;
+static enum con_timestamp_mode __read_mostly opt_con_timestamp_mode = TSM_BOOT;
 
 static void parse_console_timestamps(char *s);
 custom_param("console_timestamps", parse_console_timestamps);
 
-/* conring_size: allows a large console ring than default (16kB). */
+/* conring_size: allows a large console ring than default (64kB). */
 static uint32_t __initdata opt_conring_size;
 size_param("conring_size", opt_conring_size);
 
-#define _CONRING_SIZE 16384
+#define _CONRING_SIZE 65536
 #define CONRING_IDX_MASK(i) ((i)&(conring_size-1))
 static char __initdata _conring[_CONRING_SIZE];
 static char *__read_mostly conring = _conring;
