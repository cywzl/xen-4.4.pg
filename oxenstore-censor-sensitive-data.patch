# HG changeset patch
# User Euan Harris <euan.harris@citrix.com>
# Date 1405418856 -3600
# Node ID 90d5cdcba2dabe296a94ef9512b644307603e735
# Parent  b9104ec3066c73f45a6a726b1c6e557786545634
CA-136105: Elide Windows clipboard content in xenstore logs

diff -r b9104ec3066c -r 90d5cdcba2da tools/ocaml/xenstored/logging.ml
--- a/tools/ocaml/xenstored/logging.ml	Tue Jul 08 16:34:30 2014 +0100
+++ b/tools/ocaml/xenstored/logging.ml	Tue Jul 15 11:07:36 2014 +0100
@@ -275,16 +275,28 @@
 	| Syslog facility ->
 		access_logger := Some (make_syslog_logger facility)
 
+let censor_private_data access_type data =
+       let key_is_private k =
+              String.startswith "/local/domain" k &&
+                   (String.endswith "/data/set_clipboard" k ||
+                   String.endswith "/data/report_clipboard" k)
+       in
+       match access_type, String.split ~limit:2 ' ' data with
+       | XbOp Xenbus.Xb.Op.Write, k :: _ when key_is_private k ->
+                       sprintf "%s [omitted]" k
+       | _ -> data
+
 let access_logging ~con ~tid ?(data="") ~level access_type =
         try
 		maybe
 			(fun logger ->
 				let date = string_of_date() in
 				let tid = string_of_tid ~con tid in
+				let data = sanitize_data data in
+				let censored_data = censor_private_data access_type data in
 				let access_type = string_of_access_type access_type in
-				let data = sanitize_data data in
 				let prefix = prefix !access_log_destination date in
-				let msg = Printf.sprintf "%s %s %s %s" prefix tid access_type data in
+				let msg = Printf.sprintf "%s %s %s %s" prefix tid access_type censored_data in
 				logger.write ~level msg)
 			!access_logger
 	with _ -> ()
diff -r b9104ec3066c -r 90d5cdcba2da tools/ocaml/xenstored/stdext.ml
--- a/tools/ocaml/xenstored/stdext.ml	Tue Jul 08 16:34:30 2014 +0100
+++ b/tools/ocaml/xenstored/stdext.ml	Tue Jul 15 11:07:36 2014 +0100
@@ -69,6 +69,11 @@
 let startswith prefix x =
 	let x_l = String.length x and prefix_l = String.length prefix in
 	prefix_l <= x_l && String.sub x 0 prefix_l  = prefix
+
+(** True if string 'x' ends with suffix 'suffix' *)
+let endswith suffix x =
+ 	let x_l = String.length x and suffix_l = String.length suffix in
+ 	suffix_l <= x_l && String.sub x (x_l - suffix_l) suffix_l = suffix
 end
 
 module Unixext = struct
