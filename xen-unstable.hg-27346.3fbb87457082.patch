# HG changeset patch
# User Andrew Cooper <andrew.cooper3@citrix.com>
# Date 1375968036 -7200
# Node ID 3fbb874570825e89d3404655d694a5f61670702f
# Parent  fb3437a347456c603b3cb447928d25bc60c5b450
cleanup unused request{_dt,}_irq() parameter

The irqflags parameter appears to be an unused vestigial parameter right from
the integration of the IOMMU code in 2007.  The parameter is 0 at all
callsites and never used.

Signed-off-by: Andrew Cooper <andrew.cooper3@citrix.com>
Acked-by: Ian Campbell <Ian.Campbell@citrix.com>

diff -r fb3437a34745 -r 3fbb87457082 xen/arch/arm/gic.c
--- a/xen/arch/arm/gic.c
+++ b/xen/arch/arm/gic.c
@@ -893,7 +893,7 @@ void gic_dump_info(struct vcpu *v)
 void __cpuinit init_maintenance_interrupt(void)
 {
     request_dt_irq(&gic.maintenance, maintenance_interrupt,
-                   0, "irq-maintenance", NULL);
+                   "irq-maintenance", NULL);
 }
 
 /*
diff -r fb3437a34745 -r 3fbb87457082 xen/arch/arm/irq.c
--- a/xen/arch/arm/irq.c
+++ b/xen/arch/arm/irq.c
@@ -95,7 +95,7 @@ void __cpuinit init_secondary_IRQ(void)
 
 int __init request_dt_irq(const struct dt_irq *irq,
         void (*handler)(int, void *, struct cpu_user_regs *),
-        unsigned long irqflags, const char *devname, void *dev_id)
+        const char *devname, void *dev_id)
 {
     struct irqaction *action;
     int retval;
diff -r fb3437a34745 -r 3fbb87457082 xen/arch/arm/time.c
--- a/xen/arch/arm/time.c
+++ b/xen/arch/arm/time.c
@@ -238,11 +238,11 @@ void __cpuinit init_timer_interrupt(void
     WRITE_SYSREG32(0, CNTHP_CTL_EL2);   /* Hypervisor's timer disabled */
     isb();
 
-    request_dt_irq(&timer_irq[TIMER_HYP_PPI], timer_interrupt, 0,
+    request_dt_irq(&timer_irq[TIMER_HYP_PPI], timer_interrupt,
                    "hyptimer", NULL);
-    request_dt_irq(&timer_irq[TIMER_VIRT_PPI], vtimer_interrupt, 0,
+    request_dt_irq(&timer_irq[TIMER_VIRT_PPI], vtimer_interrupt,
                    "virtimer", NULL);
-    request_dt_irq(&timer_irq[TIMER_PHYS_NONSECURE_PPI], timer_interrupt, 0,
+    request_dt_irq(&timer_irq[TIMER_PHYS_NONSECURE_PPI], timer_interrupt,
                    "phytimer", NULL);
 }
 
diff -r fb3437a34745 -r 3fbb87457082 xen/arch/x86/hpet.c
--- a/xen/arch/x86/hpet.c
+++ b/xen/arch/x86/hpet.c
@@ -355,7 +355,7 @@ static int __init hpet_setup_msi_irq(str
     hpet_write32(cfg, HPET_Tn_CFG(ch->idx));
 
     desc->handler = &hpet_msi_type;
-    ret = request_irq(ch->msi.irq, hpet_interrupt_handler, 0, "HPET", ch);
+    ret = request_irq(ch->msi.irq, hpet_interrupt_handler, "HPET", ch);
     if ( ret >= 0 )
         ret = __hpet_setup_msi_irq(desc);
     if ( ret < 0 )
diff -r fb3437a34745 -r 3fbb87457082 xen/arch/x86/irq.c
--- a/xen/arch/x86/irq.c
+++ b/xen/arch/x86/irq.c
@@ -951,7 +951,7 @@ static int __init irq_ratelimit_init(voi
 
 int __init request_irq(unsigned int irq,
         void (*handler)(int, void *, struct cpu_user_regs *),
-        unsigned long irqflags, const char * devname, void *dev_id)
+        const char * devname, void *dev_id)
 {
     struct irqaction * action;
     int retval;
diff -r fb3437a34745 -r 3fbb87457082 xen/drivers/passthrough/amd/iommu_init.c
--- a/xen/drivers/passthrough/amd/iommu_init.c
+++ b/xen/drivers/passthrough/amd/iommu_init.c
@@ -814,7 +814,7 @@ static bool_t __init set_iommu_interrupt
         handler = &iommu_msi_type;
     ret = __setup_msi_irq(irq_to_desc(irq), &iommu->msi, handler);
     if ( !ret )
-        ret = request_irq(irq, iommu_interrupt_handler, 0, "amd_iommu", iommu);
+        ret = request_irq(irq, iommu_interrupt_handler, "amd_iommu", iommu);
     if ( ret )
     {
         destroy_irq(irq);
diff -r fb3437a34745 -r 3fbb87457082 xen/drivers/passthrough/vtd/iommu.c
--- a/xen/drivers/passthrough/vtd/iommu.c
+++ b/xen/drivers/passthrough/vtd/iommu.c
@@ -1098,7 +1098,7 @@ static int __init iommu_set_interrupt(st
 
     desc = irq_to_desc(irq);
     desc->handler = &dma_msi_type;
-    ret = request_irq(irq, iommu_page_fault, 0, "dmar", iommu);
+    ret = request_irq(irq, iommu_page_fault, "dmar", iommu);
     if ( ret )
     {
         desc->handler = &no_irq_type;
diff -r fb3437a34745 -r 3fbb87457082 xen/include/asm-arm/irq.h
--- a/xen/include/asm-arm/irq.h
+++ b/xen/include/asm-arm/irq.h
@@ -42,8 +42,7 @@ void init_secondary_IRQ(void);
 
 int __init request_dt_irq(const struct dt_irq *irq,
                           void (*handler)(int, void *, struct cpu_user_regs *),
-                          unsigned long irqflags, const char *devname,
-                          void *dev_id);
+                          const char *devname, void *dev_id);
 int __init setup_dt_irq(const struct dt_irq *irq, struct irqaction *new);
 
 #endif /* _ASM_HW_IRQ_H */
diff -r fb3437a34745 -r 3fbb87457082 xen/include/xen/irq.h
--- a/xen/include/xen/irq.h
+++ b/xen/include/xen/irq.h
@@ -93,7 +93,7 @@ extern int setup_irq(unsigned int irq, s
 extern void release_irq(unsigned int irq);
 extern int request_irq(unsigned int irq,
                void (*handler)(int, void *, struct cpu_user_regs *),
-               unsigned long irqflags, const char * devname, void *dev_id);
+               const char * devname, void *dev_id);
 
 extern hw_irq_controller no_irq_type;
 extern void no_action(int cpl, void *dev_id, struct cpu_user_regs *regs);
